openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://bsky.social/xrpc
info:
  description: Unofficial OpenAPI specification for the Bluesky API endpoints.
  version: '1.0'
  title: Bluesky API
  contact:
    email: torin@imp.sh
  license:
    name: MIT
    url: 'https://opensource.org/license/mit/'
paths:
  /app.bsky.actor.getPreferences:
    get:
      tags:
        - app.bsky.actor
      summary: Get private preferences attached to the account.
      operationId: getPreferences
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - preferences
                properties:
                  preferences:
                    $ref: '#/components/schemas/Preferences'
  /app.bsky.actor.getProfile:
    get:
      tags:
        - app.bsky.actor
      summary: Get a detailed profile view of an actor.
      operationId: getProfile
      parameters:
        - name: actor
          in: query
          description: Identifier of the actor to get the profile for.
          required: true
          schema:
            type: string
            format: at-identifier
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileViewDetailed'
  /app.bsky.actor.getProfiles:
    get:
      tags:
        - app.bsky.actor
      summary: Get detailed profile views of multiple actors.
      operationId: getProfiles
      parameters:
        - name: actors
          in: query
          description: Identifiers of the actors to get the profiles for.
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              format: at-identifier
            maxItems: 25
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - profiles
                properties:
                  profiles:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProfileViewDetailed'
  /app.bsky.actor.getSuggestions:
    get:
      tags:
        - app.bsky.actor
      summary: Get a list of actors suggested for following.
      description: Used in discovery UIs.
      operationId: getSuggestions
      parameters:
        - name: limit
          in: query
          description: The maximum number of suggested actors to return.
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
        - name: cursor
          in: query
          description: A cursor for pagination.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - actors
                properties:
                  cursor:
                    type: string
                  actors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProfileView'
  /app.bsky.actor.putPreferences:
    post:
      tags:
        - app.bsky.actor
      summary: Sets the private preferences attached to the account.
      operationId: putPreferences
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - preferences
              properties:
                preferences:
                  $ref: '#/components/schemas/Preferences'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
  /app.bsky.actor.searchActors:
    get:
      tags:
        - app.bsky.actor
      summary: Find actors matching search criteria.
      operationId: searchActors
      parameters:
        - in: query
          name: term
          schema:
            type: string
          required: false
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
          required: false
        - in: query
          name: cursor
          schema:
            type: string
          required: false
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - actors
                properties:
                  cursor:
                    type: string
                  actors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProfileView'
  /app.bsky.actor.searchActorsTypeahead:
    get:
      tags:
        - app.bsky.actor
      summary: Find actor suggestions for a search term.
      operationId: searchActorsTypeahead
      parameters:
        - in: query
          name: term
          schema:
            type: string
          required: false
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
          required: false
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - actors
                properties:
                  actors:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProfileViewBasic'
  /app.bsky.feed.getAuthorFeed:
    get:
      tags:
        - app.bsky.feed
      parameters:
        - name: actor
          in: query
          required: true
          schema:
            type: string
            format: at-identifier
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
        - name: cursor
          in: query
          schema:
            type: string
      responses:
        '200':
          description: A view of an actor's feed
          content:
            application/json:
              schema:
                type: object
                required:
                  - feed
                properties:
                  cursor:
                    type: string
                  feed:
                    type: array
                    items:
                      $ref: '#/components/schemas/FeedViewPost'
        '400':
          description: Errors
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/BlockedActor'
                  - $ref: '#/components/schemas/BlockedByActor'
  /app.bsky.feed.getLikes:
    get:
      tags:
        - app.bsky.feed
      parameters:
        - name: uri
          in: query
          required: true
          schema:
            type: string
            format: at-uri
        - name: cid
          in: query
          schema:
            type: string
            format: cid
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
        - name: cursor
          in: query
          schema:
            type: string
      responses:
        '200':
          description: A list of likes for a specific post
          content:
            application/json:
              schema:
                type: object
                required:
                  - uri
                  - likes
                properties:
                  uri:
                    type: string
                    format: at-uri
                  cid:
                    type: string
                    format: cid
                  cursor:
                    type: string
                  likes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Like'
  /app.bsky.feed.getPostThread:
    get:
      tags:
        - app.bsky.feed
      parameters:
        - name: uri
          in: query
          required: true
          schema:
            type: string
            format: at-uri
        - name: depth
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: The post thread for a specific post
          content:
            application/json:
              schema:
                type: object
                required:
                  - thread
                properties:
                  thread:
                    anyOf:
                      - $ref: '#/components/schemas/ThreadViewPost'
                      - $ref: '#/components/schemas/NotFoundPost'
                      - $ref: '#/components/schemas/BlockedPost'
        '404':
          description: Post not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: NotFound
  /app.bsky.feed.getPosts:
    get:
      tags:
        - app.bsky.feed
      parameters:
        - name: uris
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
              format: at-uri
            maxLength: 25
      responses:
        '200':
          description: A batch of specific posts
          content:
            application/json:
              schema:
                type: object
                required:
                  - posts
                properties:
                  posts:
                    type: array
                    items:
                      $ref: '#/components/schemas/PostView'
  /app.bsky.feed.repostedBy:
    get:
      tags:
        - app.bsky.feed
      parameters:
        - name: uri
          in: query
          required: true
          schema:
            type: string
            format: at-uri
        - name: cid
          in: query
          schema:
            type: string
            format: cid
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
        - name: cursor
          in: query
          schema:
            type: string
      responses:
        '200':
          description: The list of actors who have reposted a specific post
          content:
            application/json:
              schema:
                type: object
                required:
                  - uri
                  - repostedBy
                properties:
                  uri:
                    type: string
                    format: at-uri
                  cid:
                    type: string
                    format: cid
                  cursor:
                    type: string
                  repostedBy:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProfileView'
  /app.bsky.feed.getTimeline:
    get:
      tags:
        - app.bsky.feed
      description: A view of the user's home timeline.
      parameters:
        - name: algorithm
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
        - name: cursor
          in: query
          schema:
            type: string
      responses:
        '200':
          description: The user's home timeline
          content:
            application/json:
              schema:
                type: object
                required:
                  - feed
                properties:
                  cursor:
                    type: string
                  feed:
                    type: array
                    items:
                      $ref: '#/components/schemas/FeedViewPost'
  /app.bsky.feed.follow:
    post:
      summary: "A social follow."
      operationId: follow
      tags:
        - app.bsky.graph
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Follow'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  tid:
                    type: string
                    description: The record key
                  record:
                    $ref: '#/components/schemas/Follow'
        '400':
          description: Invalid input
        '500':
          description: Unexpected error
  /app.bsky.graph.getBlocks:
    get:
      summary: "Who is the requester's account blocking?"
      operationId: getBlocks
      tags:
        - app.bsky.graph
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
        - in: query
          name: cursor
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  cursor:
                    type: string
                  blocks:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProfileView'
        '400':
          description: Invalid input
        '500':
          description: Unexpected error
  /app.bsky.graph.getFollowers:
    get:
      summary: "Who is following an actor?"
      operationId: getFollowers
      tags:
        - app.bsky.graph
      parameters:
        - in: query
          name: actor
          schema:
            type: string
            format: at-identifier
          required: true
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
        - in: query
          name: cursor
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  subject:
                    $ref: '#/components/schemas/ProfileView'
                  cursor:
                    type: string
                  followers:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProfileView'
        '400':
          description: Invalid input
        '500':
          description: Unexpected error
  /app.bsky.graph.getFollows:
    get:
      summary: "Who is an actor following?"
      operationId: getFollows
      tags:
        - app.bsky.graph
      parameters:
        - in: query
          name: actor
          schema:
            type: string
            format: at-identifier
          required: true
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
        - in: query
          name: cursor
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  subject:
                    $ref: '#/components/schemas/ProfileView'
                  cursor:
                    type: string
                  follows:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProfileView'
        '400':
          description: Invalid input
        '500':
          description: Unexpected error
  /app.bsky.graph.getList:
    get:
      summary: "Fetch a list of actors"
      operationId: getList
      tags:
        - app.bsky.graph
      parameters:
        - in: query
          name: list
          schema:
            type: string
            format: at-uri
          required: true
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
        - in: query
          name: cursor
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  cursor:
                    type: string
                  list:
                    $ref: '#/components/schemas/ListView'
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ListItemView'
        '400':
          description: Invalid input
        '500':
          description: Unexpected error
  /app.bsky.graph.getListMutes:
    get:
      summary: "Which lists is the requester's account muting?"
      operationId: getListMutes
      tags:
        - app.bsky.graph
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
        - in: query
          name: cursor
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  cursor:
                    type: string
                  lists:
                    type: array
                    items:
                      $ref: '#/components/schemas/ListView'
        '400':
          description: Invalid input
        '500':
          description: Unexpected error
  /app.bsky.graph.getLists:
    get:
      summary: "Fetch a list of lists that belong to an actor"
      operationId: getLists
      tags:
        - app.bsky.graph
      parameters:
        - in: query
          name: actor
          required: true
          schema:
            type: string
            format: at-identifier
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
        - in: query
          name: cursor
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  cursor:
                    type: string
                  lists:
                    type: array
                    items:
                      $ref: '#/components/schemas/ListView'
        '400':
          description: Invalid input
        '500':
          description: Unexpected error
  /app.bsky.graph.getMutes:
    get:
      summary: "Who does the viewer mute?"
      operationId: getMutes
      tags:
        - app.bsky.graph
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
        - in: query
          name: cursor
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - mutes
                properties:
                  cursor:
                    type: string
                  mutes:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProfileView'
        '400':
          description: Invalid input
        '500':
          description: Unexpected error
  /app.bsky.graph.muteActor:
    post:
      tags:
        - app.bsky.graph
      summary: "Mute an actor by did or handle."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - actor
              properties:
                actor:
                  type: string
                  description: "Actor identifier"
                  format: uri
      responses:
        '200':
          description: "Actor muted successfully"
        '400':
          description: "Invalid request"
        '500':
          description: "Internal server error"
  /app.bsky.graph.muteActorList:
    post:
      tags:
        - app.bsky.graph
      summary: "Mute a list of actors."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - list
              properties:
                list:
                  type: string
                  description: "List identifier"
                  format: uri
      responses:
        '200':
          description: "Actor list muted successfully"
        '400':
          description: "Invalid request"
        '500':
          description: "Internal server error"
  /app.bsky.graph.unmuteActor:
    post:
      tags:
        - app.bsky.graph
      summary: "Unmute an actor by did or handle."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - actor
              properties:
                actor:
                  type: string
                  description: "Actor identifier"
                  format: at-identifier
      responses:
        '200':
          description: "Actor unmuted successfully"
        '400':
          description: "Invalid request"
        '500':
          description: "Internal server error"
  /app.bsky.graph.unmuteActorList:
    post:
      tags:
        - app.bsky.graph
      summary: "Unmute a list of actors."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - list
              properties:
                list:
                  type: string
                  description: "List URI"
                  format: at-uri
      responses:
        '200':
          description: "Actors in the list unmuted successfully"
        '400':
          description: "Invalid request"
        '500':
          description: "Internal server error"
  /app.bsky.notification.getUnreadCount:
    get:
      tags:
        - app.bsky.notification
      summary: "Get count of unread notifications."
      parameters:
        - name: seenAt
          in: query
          description: "Datetime at which notifications were last seen"
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: object
                required:
                  - count
                properties:
                  count:
                    type: integer
                    description: "Count of unread notifications"
        '400':
          description: "Invalid request"
        '500':
          description: "Internal server error"
  /app.bsky.notification.listNotifications:
    get:
      tags:
        - app.bsky.notification
      summary: "List notifications."
      parameters:
        - name: limit
          in: query
          description: "Limit the number of notifications to fetch"
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
        - name: cursor
          in: query
          description: "Cursor for paginating through notifications"
          required: false
          schema:
            type: string
        - name: seenAt
          in: query
          description: "Datetime at which notifications were last seen"
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: object
                required:
                  - notifications
                properties:
                  cursor:
                    type: string
                    description: "Cursor for the next page of notifications"
                  notifications:
                    type: array
                    items:
                      $ref: '#/components/schemas/Notification'
        '400':
          description: "Invalid request"
        '500':
          description: "Internal server error"
  /app.bsky.notification.updateSeen:
    post:
      tags:
        - app.bsky.notification
      summary: "Notify server that the user has seen notifications."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - seenAt
              properties:
                seenAt:
                  type: string
                  format: date-time
      responses:
        '200':
          description: "Successful operation"
        '400':
          description: "Invalid request"
        '500':
          description: "Internal server error"
  /app.bsky.unspecced.popular:
    get:
      tags:
        - app.bsky.unspecced
      summary: An unspecced view of globally popular items
      parameters:
        - in: query
          name: includeNsfw
          schema:
            type: boolean
            default: false
          description: Whether to include not safe for work items
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
          description: The number of items to return
        - in: query
          name: cursor
          schema:
            type: string
          description: Cursor for pagination
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - feed
                properties:
                  cursor:
                    type: string
                  feed:
                    type: array
                    items:
                      $ref: '#/components/schemas/FeedViewPost'
components:
  schemas:
    ProfileViewBasic:
      type: object
      required:
        - did
        - handle
      properties:
        did:
          type: string
          format: did
        handle:
          type: string
          format: handle
        displayName:
          type: string
          maxLength: 640
        avatar:
          type: string
        viewer:
          $ref: '#/components/schemas/ViewerState'
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
    ProfileView:
      type: object
      required:
        - did
        - handle
      properties:
        did:
          type: string
          format: did
        handle:
          type: string
          format: handle
        displayName:
          type: string
          maxLength: 640
        description:
          type: string
          maxLength: 2560
        avatar:
          type: string
        indexedAt:
          type: string
          format: date-time
        viewer:
          $ref: '#/components/schemas/ViewerState'
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
    ProfileViewDetailed:
      type: object
      required:
        - did
        - handle
      properties:
        did:
          type: string
          format: did
        handle:
          type: string
          format: handle
        displayName:
          type: string
          maxLength: 640
        description:
          type: string
          maxLength: 2560
        avatar:
          type: string
        banner:
          type: string
        followersCount:
          type: integer
        followsCount:
          type: integer
        postsCount:
          type: integer
        indexedAt:
          type: string
          format: date-time
        viewer:
          $ref: '#/components/schemas/ViewerState'
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
    ViewerState:
      type: object
      properties:
        muted:
          type: boolean
        mutedByList:
          $ref: '#/components/schemas/ListViewBasic'
        blockedBy:
          type: boolean
        blocking:
          type: string
          format: at-uri
        following:
          type: string
          format: at-uri
        followedBy:
          type: string
          format: at-uri
    Preferences:
      type: array
      items:
        oneOf:
          - $ref: '#/components/schemas/AdultContentPref'
          - $ref: '#/components/schemas/ContentLabelPref'
    AdultContentPref:
      type: object
      required:
        - enabled
      properties:
        enabled:
          type: boolean
          default: false
    ContentLabelPref:
      type: object
      required:
        - label
        - visibility
      properties:
        label:
          type: string
        visibility:
          type: string
          enum: ['show', 'warn', 'hide']
    Label:
      type: object
      description: Metadata tag on an atproto resource (eg, repo or record)
      required:
        - src
        - uri
        - val
        - cts
      properties:
        src:
          type: string
          format: did
          description: DID of the actor who created this label
        uri:
          type: string
          format: uri
          description: AT URI of the record, repository (account), or other resource which this label applies to
        cid:
          type: string
          format: cid
          description: optionally, CID specifying the specific version of 'uri' resource this label applies to
        val:
          type: string
          maxLength: 128
          description: the short string name of the value or type of this label
        neg:
          type: boolean
          description: if true, this is a negation label, overwriting a previous label
        cts:
          type: string
          format: datetime
          description: timestamp when this label was created
    ListViewBasic:
      type: object
    ExternalEmbed:
      type: object
      required:
        - external
      properties:
        external:
          $ref: '#/components/schemas/External'
    External:
      type: object
      required:
        - uri
        - title
        - description
      properties:
        uri:
          type: string
          format: uri
        title:
          type: string
        description:
          type: string
        thumb:
          type: string
          format: binary
          maxLength: 1000000
    ExternalEmbedView:
      type: object
      required:
        - external
      properties:
        external:
          $ref: '#/components/schemas/ExternalView'
    ExternalView:
      type: object
      required:
        - uri
        - title
        - description
      properties:
        uri:
          type: string
          format: uri
        title:
          type: string
        description:
          type: string
        thumb:
          type: string
    ImagesEmbed:
      type: object
      required:
        - images
      properties:
        images:
          type: array
          items:
            $ref: '#/components/schemas/Image'
          maxItems: 4
    Image:
      type: object
      required:
        - image
        - alt
      properties:
        image:
          type: string
          format: binary
          maxLength: 1000000
        alt:
          type: string
    ImagesEmbedView:
      type: object
      required:
        - images
      properties:
        images:
          type: array
          items:
            $ref: '#/components/schemas/ImageView'
          maxItems: 4
    ImageView:
      type: object
      required:
        - thumb
        - fullsize
        - alt
      properties:
        thumb:
          type: string
        fullsize:
          type: string
        alt:
          type: string
    RecordEmbed:
      type: object
      required:
        - record
      properties:
        record:
          $ref: '#/components/schemas/StrongRef'
    RecordEmbedView:
      type: object
      required:
        - record
      properties:
        record:
          oneOf:
            - $ref: '#/components/schemas/ViewRecord'
            - $ref: '#/components/schemas/ViewNotFound'
            - $ref: '#/components/schemas/ViewBlocked'
    ViewRecord:
      type: object
      required:
        - uri
        - cid
        - author
        - value
        - indexedAt
      properties:
        uri:
          type: string
          format: at-uri
        cid:
          type: string
          format: cid
        author:
          $ref: '#/components/schemas/ProfileViewBasic'
        value:
          type: string
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
        embeds:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/ImagesEmbedView'
              - $ref: '#/components/schemas/ExternalEmbedView'
              - $ref: '#/components/schemas/RecordEmbedView'
              - $ref: '#/components/schemas/RecordWithMediaEmbedView'
        indexedAt:
          type: string
          format: date-time
    ViewNotFound:
      type: object
      required:
        - uri
      properties:
        uri:
          type: string
          format: at-uri
    ViewBlocked:
      type: object
      required:
        - uri
      properties:
        uri:
          type: string
          format: at-uri
    RecordWithMediaEmbed:
      type: object
      required:
        - record
        - media
      properties:
        record:
          $ref: '#/components/schemas/RecordEmbed'
        media:
          oneOf:
            - $ref: '#/components/schemas/ImagesEmbed'
            - $ref: '#/components/schemas/ExternalEmbed'
    RecordWithMediaEmbedView:
      type: object
      required:
        - record
        - media
      properties:
        record:
          $ref: '#/components/schemas/RecordEmbedView'
        media:
          oneOf:
            - $ref: '#/components/schemas/ImagesEmbedView'
            - $ref: '#/components/schemas/ExternalEmbedView'
    PostView:
      type: object
      required:
        - uri
        - cid
        - author
        - record
        - indexedAt
      properties:
        uri:
          type: string
          format: at-uri
        cid:
          type: string
          format: cid
        author:
          $ref: '#/components/schemas/ProfileViewBasic'
        record:
          type: object
        embed:
          oneOf:
            - $ref: '#/components/schemas/ImagesEmbedView'
            - $ref: '#/components/schemas/ExternalEmbedView'
            - $ref: '#/components/schemas/RecordEmbedView'
            - $ref: '#/components/schemas/RecordWithMediaEmbedView'
        replyCount:
          type: integer
        repostCount:
          type: integer
        likeCount:
          type: integer
        indexedAt:
          type: string
          format: datetime
        viewer:
          $ref: '#/components/schemas/ViewerState'
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
    BlockedActor:
      type: object
    BlockedByActor:
      type: object
    Like:
      type: object
      required:
        - indexedAt
        - createdAt
        - actor
      properties:
        indexedAt:
          type: string
          format: datetime
        createdAt:
          type: string
          format: datetime
        actor:
          $ref: '#/components/schemas/ProfileView'
    FeedLike:
      type: object
      required:
        - subject
        - createdAt
      properties:
        subject:
          $ref: '#/components/schemas/StrongRef'
        createdAt:
          type: string
          format: datetime
    Post:
      type: object
      required:
        - text
        - createdAt
      properties:
        text:
          type: string
          maxLength: 3000
          description: 'text'
        entities:
          type: array
          description: deprecated - replaced by app.bsky.richtext.facet.
          items:
            $ref: '#/components/schemas/Entity'
        facets:
          type: array
          items:
            $ref: '#/components/schemas/Facet'
        reply:
          $ref: '#/components/schemas/ReplyRef'
        embed:
          $ref: '#/components/schemas/Embed'
        createdAt:
          type: string
          format: datetime
    Embed:
      oneOf:
        - $ref: '#/components/schemas/ImagesEmbedView'
        - $ref: '#/components/schemas/ExternalEmbedView'
        - $ref: '#/components/schemas/RecordEmbedView'
        - $ref: '#/components/schemas/RecordWithMediaEmbedView'
    ReplyRef:
      type: object
      required:
        - root
        - parent
      properties:
        root:
          $ref: '#/components/schemas/StrongRef'
        parent:
          $ref: '#/components/schemas/StrongRef'
    Entity:
      type: object
      description: Deprecated - use facets instead.
      required:
        - index
        - type
        - value
      properties:
        index:
          $ref: '#/components/schemas/TextSlice'
        type:
          type: string
          description: Expected values are 'mention' and 'link'.
        value:
          type: string
    TextSlice:
      type: object
      description: Deprecated. Use app.bsky.richtext instead -- A text segment. Start is inclusive, end is exclusive. Indices are for utf16-encoded strings.
      required:
        - start
        - end
      properties:
        start:
          type: integer
          minimum: 0
        end:
          type: integer
          minimum: 0
    Repost:
      type: object
      required:
        - subject
        - createdAt
      properties:
        subject:
          $ref: '#/components/schemas/StrongRef'
        createdAt:
          type: string
          format: datetime
    Block:
      type: object
      required:
        - subject
        - createdAt
      properties:
        subject:
          type: string
          format: did
        createdAt:
          type: string
          format: datetime
    Follow:
      type: object
      required:
        - subject
        - createdAt
      properties:
        subject:
          type: string
          format: did
        createdAt:
          type: string
          format: datetime
    ListRecord:
      type: object
      required:
        - name
        - purpose
        - createdAt
      properties:
        purpose:
          $ref: '#/components/schemas/ListPurpose'
        name:
          type: string
          maxLength: 64
          minLength: 1
        description:
          type: string
          maxLength: 3000
        descriptionFacets:
          type: array
          items:
            $ref: '#/components/schemas/RichTextFacet'
        avatar:
          type: string
          format: binary
          description: "A binary file with a maximum size of 1,000,000 bytes. Accepts image/png or image/jpeg file types."
        createdAt:
          type: string
          format: date-time
    ListItemRecord:
      type: object
      required:
        - subject
        - list
        - createdAt
      properties:
        subject:
          type: string
          description: "Decentralized identifier (DID)"
          format: uri
        list:
          type: string
          description: "Unique identifier of the list"
          format: uri
        createdAt:
          type: string
          description: "Creation date of the list item"
          format: date-time
    Notification:
      type: object
      required:
        - uri
        - cid
        - author
        - reason
        - record
        - isRead
        - indexedAt
      properties:
        uri:
          type: string
          format: uri
        cid:
          type: string
        author:
          $ref: '#/components/schemas/ProfileView'
        reason:
          type: string
          enum: [ "like", "repost", "follow", "mention", "reply", "quote" ]
        reasonSubject:
          type: string
          format: uri
        record:
          type: object
        isRead:
          type: boolean
        indexedAt:
          type: string
          format: date-time
        labels:
          type: array
          items:
            $ref: '#/components/schemas/Label'
    Facet:
      type: object
      required:
        - index
        - features
      properties:
        index:
          $ref: '#/components/schemas/ByteSlice'
        features:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Mention'
              - $ref: '#/components/schemas/Link'
    Mention:
      type: object
      description: "A facet feature for actor mentions."
      required:
        - did
      properties:
        did:
          type: string
          format: did
    Link:
      type: object
      description: "A facet feature for links."
      required:
        - uri
      properties:
        uri:
          type: string
          format: uri
    ByteSlice:
      type: object
      description: "A text segment. Start is inclusive, end is exclusive. Indices are for utf8-encoded strings."
      required:
        - byteStart
        - byteEnd
      properties:
        byteStart:
          type: integer
          minimum: 0
        byteEnd:
          type: integer
          minimum: 0
    FeedViewPost:
      type: object
      required:
        - post
      properties:
        post:
          $ref: '#/components/schemas/PostView'
        reply:
          $ref: '#/components/schemas/ReplyRef'
        reason:
          oneOf:
            - $ref: '#/components/schemas/ReasonRepost'
    ReasonRepost:
      type: object
      required:
        - by
        - indexedAt
      properties:
        by:
          $ref: '#/components/schemas/ProfileViewBasic'
        indexedAt:
          type: string
          format: datetime
    ThreadViewPost:
      type: object
      required:
        - post
      properties:
        post:
          $ref: '#/components/schemas/PostView'
        parent:
          oneOf:
            - $ref: '#/components/schemas/ThreadViewPost'
            - $ref: '#/components/schemas/NotFoundPost'
            - $ref: '#/components/schemas/BlockedPost'
        replies:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/ThreadViewPost'
              - $ref: '#/components/schemas/NotFoundPost'
              - $ref: '#/components/schemas/BlockedPost'
    NotFoundPost:
      type: object
      required:
        - uri
        - notFound
      properties:
        uri:
          type: string
          format: at-uri
        notFound:
          type: boolean
          default: true
    BlockedPost:
      type: object
      required:
        - uri
        - blocked
      properties:
        uri:
          type: string
          format: at-uri
        blocked:
          type: boolean
          default: true
    ListView:
      type: object
      required:
        - uri
        - creator
        - name
        - purpose
        - indexedAt
      properties:
        uri:
          type: string
          format: at-uri
        creator:
          $ref: '#/components/schemas/ProfileView'
        name:
          type: string
          maxLength: 64
          minLength: 1
        purpose:
          $ref: '#/components/schemas/ListPurpose'
        description:
          type: string
          description: Max graphemes 300, maxLength 3000
        descriptionFacets:
          type: array
          items:
            $ref: '#/components/schemas/RichTextFacet'
        avatar:
          type: string
        viewer:
          $ref: '#/components/schemas/ListViewerState'
        indexedAt:
          type: string
          format: datetime
    ListItemView:
      type: object
      required:
        - subject
      properties:
        subject:
          $ref: '#/components/schemas/ProfileView'
    ListPurpose:
      type: string
      enum:
        - modlist
    Modlist:
      type: string
      description: A list of actors to apply an aggregate moderation action (mute/block) on
    ListViewerState:
      type: object
      properties:
        muted:
          type: boolean
    StrongRef:
      type: object
      description: A URI with a content-hash fingerprint.
      required:
        - uri
        - cid
      properties:
        uri:
          type: string
          format: at-uri
        cid:
          type: string
          format: cid
    RichTextFacet:
      type: object
      required:
        - index
        - features
      properties:
        index:
          $ref: '#/components/schemas/ByteSlice'
        features:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Mention'
              - $ref: '#/components/schemas/Link'
